CREATE TABLE IF NOT EXISTS md.auth_group (
	id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	"name" varchar(150) NOT NULL,
	CONSTRAINT auth_group_name_key UNIQUE (name),
	CONSTRAINT auth_group_pkey PRIMARY KEY (id)
);
CREATE INDEX IF NOT EXISTS auth_group_name_a6ea08ec_like ON md.auth_group USING btree (name varchar_pattern_ops);


CREATE TABLE IF NOT EXISTS md.django_content_type (
	id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	app_label varchar(100) NOT NULL,
	model varchar(100) NOT NULL,
	CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model),
	CONSTRAINT django_content_type_pkey PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS md.django_migrations (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	app varchar(255) NOT NULL,
	"name" varchar(255) NOT NULL,
	applied timestamptz NOT NULL,
	CONSTRAINT django_migrations_pkey PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS md.django_session (
	session_key varchar(40) NOT NULL,
	session_data text NOT NULL,
	expire_date timestamptz NOT NULL,
	CONSTRAINT django_session_pkey PRIMARY KEY (session_key)
);
CREATE INDEX IF NOT EXISTS django_session_expire_date_a5c62663 ON md.django_session USING btree (expire_date);
CREATE INDEX IF NOT EXISTS django_session_session_key_c0390e0f_like ON md.django_session USING btree (session_key varchar_pattern_ops);


CREATE TABLE IF NOT EXISTS md.auth_permission (
	id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	"name" varchar(255) NOT NULL,
	content_type_id int4 NOT NULL,
	codename varchar(100) NOT NULL,
	CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename),
	CONSTRAINT auth_permission_pkey PRIMARY KEY (id),
	CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES md.django_content_type(id) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX IF NOT EXISTS auth_permission_content_type_id_2f476e4b ON md.auth_permission USING btree (content_type_id);


CREATE TABLE IF NOT EXISTS md.auth_group_permissions (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	group_id int4 NOT NULL,
	permission_id int4 NOT NULL,
	CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id),
	CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id),
	CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES md.auth_permission(id) DEFERRABLE INITIALLY DEFERRED,
	CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES md.auth_group(id) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX IF NOT EXISTS auth_group_permissions_group_id_b120cbf9 ON md.auth_group_permissions USING btree (group_id);
CREATE INDEX IF NOT EXISTS auth_group_permissions_permission_id_84c5c92e ON md.auth_group_permissions USING btree (permission_id);


CREATE TABLE IF NOT EXISTS md.django_admin_log (
	id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	action_time timestamptz NOT NULL,
	object_id text NULL,
	object_repr varchar(200) NOT NULL,
	action_flag int2 NOT NULL,
	change_message text NOT NULL,
	content_type_id int4 NULL,
	user_id int8 NOT NULL,
	CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0)),
	CONSTRAINT django_admin_log_pkey PRIMARY KEY (id)
);
CREATE INDEX IF NOT EXISTS django_admin_log_content_type_id_c4bce8eb ON md.django_admin_log USING btree (content_type_id);
CREATE INDEX IF NOT EXISTS django_admin_log_user_id_c564eba6 ON md.django_admin_log USING btree (user_id);


DO
$$
BEGIN

    IF NOT EXISTS (SELECT 1
               FROM information_schema.table_constraints
               WHERE constraint_schema = 'md'
                     AND constraint_name = 'django_admin_log_content_type_id_c4bce8eb_fk_django_co')
    THEN
        ALTER TABLE md.django_admin_log
        ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co
        FOREIGN KEY (content_type_id) REFERENCES md.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;
    END IF;

    IF NOT EXISTS (SELECT 1
               FROM information_schema.table_constraints
               WHERE constraint_schema = 'md'
                     AND constraint_name = 'django_admin_log_user_id_c564eba6_fk_users_id')
    THEN
        ALTER TABLE md.django_admin_log
        ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_users_id
        FOREIGN KEY (user_id) REFERENCES md.users(id) DEFERRABLE INITIALLY DEFERRED;
    END IF;

END
$$;

